diff --git a/packages/Python/lldbsuite/test/tools/lldb-server/TestLldbGdbServer.py b/packages/Python/lldbsuite/test/tools/lldb-server/TestLldbGdbServer.py
index aec040c..1ac556d 100644
--- a/packages/Python/lldbsuite/test/tools/lldb-server/TestLldbGdbServer.py
+++ b/packages/Python/lldbsuite/test/tools/lldb-server/TestLldbGdbServer.py
@@ -648,6 +648,7 @@ class LldbGdbServerTestCase(gdbremote_testcase.GdbRemoteTestCaseBase):
             reg_index += 1
 
     @debugserver_test
+    @expectedFailurei386
     def test_p_returns_correct_data_size_for_each_qRegisterInfo_launch_debugserver(self):
         self.init_debugserver_test()
         self.build()
@@ -655,6 +656,7 @@ class LldbGdbServerTestCase(gdbremote_testcase.GdbRemoteTestCaseBase):
         self.p_returns_correct_data_size_for_each_qRegisterInfo()
 
     @llgs_test
+    @expectedFailurei386
     def test_p_returns_correct_data_size_for_each_qRegisterInfo_launch_llgs(self):
         self.init_llgs_test()
         self.build()
@@ -669,6 +671,7 @@ class LldbGdbServerTestCase(gdbremote_testcase.GdbRemoteTestCaseBase):
         self.p_returns_correct_data_size_for_each_qRegisterInfo()
 
     @llgs_test
+    @expectedFailurei386
     def test_p_returns_correct_data_size_for_each_qRegisterInfo_attach_llgs(self):
         self.init_llgs_test()
         self.build()
@@ -712,6 +715,7 @@ class LldbGdbServerTestCase(gdbremote_testcase.GdbRemoteTestCaseBase):
         self.Hg_switches_to_3_threads()
 
     @llgs_test
+    @unittest2.expectedFailure
     def test_Hg_switches_to_3_threads_launch_llgs(self):
         self.init_llgs_test()
         self.build()
@@ -726,6 +730,7 @@ class LldbGdbServerTestCase(gdbremote_testcase.GdbRemoteTestCaseBase):
         self.Hg_switches_to_3_threads()
 
     @llgs_test
+    @unittest2.expectedFailure
     def test_Hg_switches_to_3_threads_attach_llgs(self):
         self.init_llgs_test()
         self.build()
@@ -844,6 +849,7 @@ class LldbGdbServerTestCase(gdbremote_testcase.GdbRemoteTestCaseBase):
         self.Hc_then_Csignal_signals_correct_thread(self.TARGET_EXC_BAD_ACCESS)
 
     @llgs_test
+    @unittest2.expectedFailure
     def test_Hc_then_Csignal_signals_correct_thread_launch_llgs(self):
         self.init_llgs_test()
         self.build()
